/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "TcpkaliOrchestration"
 * 	found in "TcpkaliOrchestration.asn1"
 * 	`asn1c -gen-OER -gen-PER -pdu=TcpkaliMessage`
 */

#ifndef	_Start_H_
#define	_Start_H_


#include <asn_application.h>

/* Including external dependencies */
#include "URL.h"
#include <BOOLEAN.h>
#include "PositiveInteger.h"
#include <PrintableString.h>
#include "PositiveReal.h"
#include "TcpPort.h"
#include <NativeEnumerated.h>
#include <OCTET_STRING.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum listenMode {
	listenMode_silent	= 0,
	listenMode_active	= 1
} e_listenMode;

/* Start */
typedef struct Start {
	URL_t	*target	/* OPTIONAL */;
	BOOLEAN_t	*nagle	/* OPTIONAL */;
	PositiveInteger_t	*rcvbuf	/* OPTIONAL */;
	PositiveInteger_t	*sndbuf	/* OPTIONAL */;
	BOOLEAN_t	*writeCombine	/* OPTIONAL */;
	PositiveInteger_t	*workers	/* OPTIONAL */;
	BOOLEAN_t	*ws	/* OPTIONAL */;
	BOOLEAN_t	*ssl	/* OPTIONAL */;
	PrintableString_t	*sslCert	/* OPTIONAL */;
	PrintableString_t	*sslKey	/* OPTIONAL */;
	PrintableString_t	*header	/* OPTIONAL */;
	PositiveInteger_t	*connections	/* OPTIONAL */;
	PositiveReal_t	*connectRate	/* OPTIONAL */;
	PositiveReal_t	*connectTimeout	/* OPTIONAL */;
	PositiveReal_t	*channelLifetime	/* OPTIONAL */;
	PositiveReal_t	*channelBandwidthUpstream	/* OPTIONAL */;
	PositiveReal_t	*channelBandwidthDownstream	/* OPTIONAL */;
	TcpPort_t	*listenPort	/* OPTIONAL */;
	long	*listenMode	/* OPTIONAL */;
	PositiveReal_t	*duration	/* OPTIONAL */;
	PositiveReal_t	*delaySend	/* OPTIONAL */;
	OCTET_STRING_t	*firstMessage	/* OPTIONAL */;
	OCTET_STRING_t	*message	/* OPTIONAL */;
	PrintableString_t	*messageFile	/* OPTIONAL */;
	PositiveReal_t	*messageRate	/* OPTIONAL */;
	OCTET_STRING_t	*messageStop	/* OPTIONAL */;
	BOOLEAN_t	*latencyConnect	/* OPTIONAL */;
	BOOLEAN_t	*latencyFirstByte	/* OPTIONAL */;
	PrintableString_t	*latencyMarker	/* OPTIONAL */;
	PositiveInteger_t	*latencyMarkerSkip	/* OPTIONAL */;
	PrintableString_t	*latencyPercentiles	/* OPTIONAL */;
	BOOLEAN_t	*messageMarker	/* OPTIONAL */;
	BOOLEAN_t	*statsd	/* OPTIONAL */;
	PrintableString_t	*statsdHost	/* OPTIONAL */;
	TcpPort_t	*statsdPort	/* OPTIONAL */;
	PrintableString_t	*statsdNamespace	/* OPTIONAL */;
	PositiveInteger_t	*statsdLatencyWindow	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Start_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_connectRate_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_connectTimeout_15;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_channelLifetime_16;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_channelBandwidthUpstream_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_channelBandwidthDownstream_18;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_listenMode_20;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_duration_23;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_delaySend_24;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_messageRate_28;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_Start;
extern asn_SEQUENCE_specifics_t asn_SPC_Start_specs_1;
extern asn_TYPE_member_t asn_MBR_Start_1[37];

#ifdef __cplusplus
}
#endif

#endif	/* _Start_H_ */
#include <asn_internal.h>
